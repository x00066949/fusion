apiVersion: v1
kind: Service
metadata:
  name: movie-data-service
spec:
  selector:
    app: movie-data
  ports:
  - protocol: "TCP"
    port: 6000
    targetPort: 5000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-data
spec:
  selector:
    matchLabels:
      app: movie-data
  replicas: 4
  template:
    metadata:
      labels:
        app: movie-data
    spec:
      initContainers:
      - name: copy-ro-scripts
        image: busybox     
        command: ["/bin/sh","-c"]
        args: 
          - cp /cockroach-readonly/cockroach-certs/* /cockroach/cockroach-certs/;
            chmod -R 640 /cockroach/cockroach-certs/;
        volumeMounts:
        - name: cockroachdb-certs
          mountPath: /cockroach-readonly/cockroach-certs/
        - name: writeable-dir 
          mountPath: /cockroach/cockroach-certs/        
      containers:
      - name: movie-data
        image: us-central1-docker.pkg.dev/sentinel-core/mov-api/movie-python:latest
        volumeMounts:
        - name: cockroachdb-certs
          mountPath: /cockroach-readonly/cockroach-certs/
        - name: writeable-dir 
          mountPath: /cockroach/cockroach-certs/  
        ports:
        - containerPort: 5000
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-login
              key: db_password
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-login
              key: db_user
      volumes:
      - name: writeable-dir
        emptyDir: {}
      - name: cockroachdb-certs
        projected:
            sources:
              - secret:
                  name: my-release-cockroachdb-client-secret
                  items:
                    - key: ca.crt
                      path: ca.crt
                    - key: tls.crt
                      path: client.root.crt
                    - key: tls.key
                      path: client.root.key
